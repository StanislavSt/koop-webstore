import React from 'react'
import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { gql } from '@apollo/client'

import styles from '../styles/Home.module.css'
import client from '../server/apollo-client'

type Props = {
  products: {
    edges: {
      node: {
        id: string
        title: string
        imageAlt: string
        priceRange: {
          minVariantPrice: {
            amount: number
          }
        }
        images: {
          edges: {
            node: {
              url: string
            }
          }[]
        }
      }
    }[]
  }
}

const Home: NextPage<Props> = ({ products }) => {
  return (
    <div className={styles.container}>
      <Head>
        <title>KOOP</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="bg-white">
        <div className="max-w-2xl mx-auto py-16 px-4 sm:py-24 sm:px-6 lg:max-w-7xl lg:px-8">
          <h2 className="sr-only">Products</h2>

          <div className="grid grid-cols-1 gap-y-10 sm:grid-cols-2 gap-x-6 lg:grid-cols-3 xl:grid-cols-4 xl:gap-x-8">
            {products.edges.map(({ node: product }) => (
              <a key={product.id} className="group">
                <div className="w-full aspect-w-1 aspect-h-1 bg-gray-200 rounded-lg overflow-hidden xl:aspect-w-7 xl:aspect-h-8">
                  <Image
                    src={product.images.edges[0].node.url}
                    alt={product.imageAlt}
                    className="group-hover:opacity-75"
                    width={250}
                    height={250}
                  />
                </div>
                <h3 className="mt-4 text-sm text-gray-700">{product.title}</h3>
                <p className="mt-1 text-lg font-medium text-gray-900">
                  {product.priceRange.minVariantPrice.amount}
                </p>
              </a>
            ))}
          </div>
        </div>
      </div>
    </div>
  )
}

export async function getStaticProps() {
  const { data } = await client.query({
    query: gql`
      query Products {
        products(first: 5) {
          edges {
            node {
              id
              title
              handle
              tags
              priceRange {
                minVariantPrice {
                  amount
                }
              }
              images(first: 1) {
                edges {
                  node {
                    altText
                    url
                  }
                }
              }
            }
          }
        }
      }
    `,
  })

  return {
    props: {
      products: data.products,
    },
  }
}

export default Home
